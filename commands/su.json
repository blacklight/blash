{
	"name" : "su",

	"info" : {
		"syntax" : "su [username]",
		"brief" : "Change user ID or become superuser",
	},

	"action" : function ( arg )
	{
		var out = '';

		if ( !shell.has_users )
		{
			return "Users module not enabled<br/>\n";
		}

		if ( !arg || arg.length == 0 )
		{
			arg = 'root';
		}

		if ( shell.__first_cmd )
		{
			shell.cmdOut.innerHTML = '<br/>';
			shell.__first_cmd = false;
		}

		shell.getPassword = this.getPassword;
		shell.newuser = arg;

		shell.cmdOut.innerHTML += 'Password: <input type="password" ' +
			'name="password" class="password" ' +
			'onkeyup="shell.getPassword ( event )">' +
			'<br/>';

		shell.auto_prompt_focus = false;
		shell.auto_prompt_refresh = false;

		this.password = document.getElementsByName ( "password" )[0];
		this.password.focus();

		return out;
	},

	"getPassword" : function ( e )
	{
		var evt = ( window.event ) ? window.event : e;
		var key = ( evt.charCode ) ? evt.charCode : evt.keyCode;
		var password = document.getElementsByName ( "password" )[0];

		if ( key == 13 && password.value.length > 0 )
		{
			var users_php = window.location.href;
			users_php = users_php.replace ( /\/([a-zA-Z\.]+)$/, '/modules/users/users.php' );
			params = 'action=login&user=' + escape ( shell.newuser ) + '&pass=' + md5 ( password.value );

			var http = new XMLHttpRequest();
			http.open ( "POST", users_php, true );
			http.setRequestHeader ( "Content-type", "application/x-www-form-urlencoded" );
			http.setRequestHeader ( "Content-length", params.length );
			http.setRequestHeader ( "Connection", "close" );

			http.onreadystatechange = function ()
			{
				if ( http.readyState == 4 && http.status == 200 )
				{
					if ( http.responseText.match ( /^Successfully logged in as '(.+?)'/i ))
					{
						var user = RegExp.$1;
						shell.user = user;

						var files_config = window.location.href;
						files_config = files_config.replace ( /\/([a-zA-Z\.]+)$/, '/modules/users/files.php' );

						var http2 = new XMLHttpRequest();
						http2.open ( "GET", files_config, true );

						http2.onreadystatechange = function ()
						{
							if ( http2.readyState == 4 && http2.status == 200 )
							{
								shell.files = eval ( '(' + http2.responseText + ')' );

								// Remove duplicates
								var tmp = new Array();

								for ( var i in shell.files )
								{
									var contains = false;

									for ( var j=0; j < tmp.length && !contains; j++ )
									{
										if ( shell.files[i].path == tmp[j].path )
										{
											contains = true;
										}
									}

									if ( !contains )
									{
										tmp.push ( shell.files[i] );
									}
								}

								shell.files = tmp;
							}
						}

						http2.send ( null );
					}

					shell.cmdOut.innerHTML = http.responseText;
					shell.refreshPrompt ( false, false );
				}
			}

			http.send ( params );

			shell.cmdOut.innerHTML = '';
			shell.auto_prompt_focus = true;
			shell.auto_prompt_refresh = true;
			shell.refreshPrompt ( false, false );
		}
	},
}

